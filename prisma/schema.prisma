// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(auto()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User? @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User? @relation(fields: [userId], references: [id])
}

model User {
  id               String     @id @default(auto()) @map("_id")
  name             String?
  email            String?    @unique
  emailVerified    DateTime?
  isSuperAdmin     Boolean?   @default(false)
  password         String?
  image            String?
  stripeCustomerId String?    @unique
  isActive         Boolean    @default(false)

  accounts Account[]
  sessions Session[]
  licenses License[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model License {
  id        String   @id @default(auto()) @map("_id")
  userId    String?
  productId String?
  ipAddress String?
  key       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User?    @relation(fields: [userId], references: [id])
  product Product? @relation(fields: [productId], references: [id])
}

model Product {
  id       String    @id @default(auto()) @map("_id")
  name     String
  licenses License[]
}
